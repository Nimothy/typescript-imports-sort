{
  "name": "typescript-imports-sort",
  "displayName": "Typescript Imports Sort",
  "description": "Sorts import statements in Typescript code",
  "version": "1.12.2",
  "publisher": "nsoult",
  "license": "MIT",
  "icon": "images/icon.png",
  "bugs": {
    "url": "https://github.com/neilsoult/typescript-imports-sort/issues"
  },
  "homepage": "https://github.com/neilsoult/typescript-imports-sort/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/neilsoult/typescript-imports-sort.git"
  },
  "engines": {
    "vscode": "^1.10.0"
  },
  "categories": [
    "Formatters"
  ],
  "galleryBanner": {
    "color": "#f0efe7",
    "theme": "light"
  },
  "keywords": [
    "Typescript",
    "imports",
    "sort",
    "import statements",
    "import clauses"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onCommand:extension.typescriptImportsSort"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "extension.typescriptImportsSort",
        "title": "Sort imports"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Sort imports configuration",
      "properties": {
        "typescript.extension.sortImports.bracketWhitespace": {
          "type": "boolean",
          "description": "Whether or not to include whitespace between brackets of single line imports.",
          "default": true
        },
        "typescript.extension.sortImports.enableJavascript": {
          "type": "boolean",
          "description": "Whether to attempt to sort ES6-style imports in Javascript",
          "default": false
        },
        "typescript.extension.sortImports.forceTrailingCommas": {
          "type": "string",
          "enum": [
            "never",
            "always",
            "singleLineOnly",
            "multiLineOnly"
          ],
          "description": "Sets rules for adding trailing commas to lists of named imports.",
          "default": "never"
        },
        "typescript.extension.sortImports.maxLineLength": {
          "type": "number",
          "description": "The maximum line length for single line named import statements. Can override maxNamedImportsInSingleLine.",
          "default": 0
        },
        "typescript.extension.sortImports.maxNamedImportsInSingleLine": {
          "type": "number",
          "description": "The maximum number of named imports to include in a single line",
          "default": 0
        },
        "typescript.extension.sortImports.multilineIndention": {
          "type": "string",
          "enum": [
            "none",
            "namesOnly",
            "namesAndPath"
          ],
          "default": "namesOnly",
          "description": "Defines the indention on multiline import blocks"
        },
        "typescript.extension.sortImports.omitSemicolon": {
          "type": "boolean",
          "description": "Whether to omit the semicolon at the end of the line",
          "default": false
        },
        "typescript.extension.sortImports.pathSortOrder": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "package",
              "relativeUpLevel",
              "relativeDownLevel"
            ]
          },
          "uniqueItems": true,
          "minItems": 3,
          "maxItems": 3,
          "description": "When `sortMethod` is set to `path`, this controls the order to sort imports between package-level and path-relative imports. 'relativeUpLevel' describes relative paths that begin with '../', while ;relativeDownLevel' describes relative paths that begin with './'",
          "default": [
            "relativeDownLevel",
            "relativeUpLevel",
            "package"
          ]
        },
        "typescript.extension.sortImports.quoteStyle": {
          "type": "string",
          "description": "The type of quote to use for the file or package paths",
          "enum": [
            "single",
            "double"
          ],
          "default": "single"
        },
        "typescript.extension.sortImports.sortMethod": {
          "type": "string",
          "enum": [
            "fileName",
            "path",
            "importName"
          ],
          "description": "Whether to sort by the name of the import, the source path, or the file name of the import",
          "default": "importName"
        },
        "typescript.extension.sortImports.sortOnSave": {
          "type": "boolean",
          "description": "Whether to sort all imports whenever saving a Typescript file",
          "default": false
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == typescript && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == typescriptreact && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        }
      ],
      "editor/title/context": [
        {
          "when": "resourceLangId == typescript && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == typescriptreact && !inDebugMode",
          "command": "extension.typescriptImportsSort",
          "group": "1_modification"
        }
      ]
    },
    "keybindings": [
      {
        "when": "resourceLangId == typescript && editorTextFocus && !inDebugMode",
        "command": "extension.typescriptImportsSort",
        "key": "f10"
      },
      {
        "when": "resourceLangId == typescriptreact && editorTextFocus && !inDebugMode",
        "command": "extension.typescriptImportsSort",
        "key": "f10"
      }
    ]
  },
  "scripts": {
    "compile": "tsc -watch -p ./",
    "lint": "tslint \"src/*.ts\" --fix",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "node ./node_modules/vscode/bin/test",
    "vscode:prepublish": "tsc -p ./"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.5",
    "@types/node": "^6.0.40",
    "mocha": "^5.2.0",
    "tslint": "^5.11.0",
    "typescript": "^2.0.3",
    "vscode": "^1.0.0"
  }
}
